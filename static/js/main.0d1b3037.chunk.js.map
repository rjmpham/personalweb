{"version":3,"sources":["components/demo/styles/Menu.module.css","components/demo/styles/ControlPanel.module.css","components/images/profile.jpeg","components/images/santi.jpg","components/images/send_tx_wordless.png","components/images/seed_node_usage_wordless.png","components/images/whats.jpg","components/images/github.png","components/images/link.png","components/Navbar.js","components/Home.js","components/images/Profile.js","components/About.js","components/images/Project1Photo.js","components/images/Project2Photo.js","components/images/Project3Photo.js","components/Projects.js","components/images/Github.js","components/images/Link.js","components/Contact.js","components/demo/Model/Vector2.js","components/demo/Model/Floor.js","components/demo/Model/Tile.js","components/demo/Model/GameState.js","components/demo/View/Square.js","components/demo/View/Board.js","components/demo/Model/ControlButtons.js","components/demo/View/ControlPanel.js","components/demo/Model/Worker.js","components/demo/Controllers/Player.js","components/demo/Controllers/GameController.js","components/demo/View/Game.js","components/demo/View/Menu.js","components/demo/Demo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","navStyle","color","className","href","rel","type","style","to","target","Home","Profile","src","img","width","fluid","alt","About","Project1Photo","Project2Photo","class","img2","Project3Photo","Projects","Github","hspace","vspace","Link","Contact","fontSize","Vector2","x","y","this","vector2","FLOOR","GROUND","L_ONE","L_TWO","L_THREE","DOME","Tile","description","topLevel","capped","worker","isHighlighted","position","toString","console","log","getIndicator","GameState","boardSize","boardState","playerList","activePlayer","winner","selectedWorker","highlightedTiles","isInSetup","needsToSelectWorker","workerNeedsToMove","needsToBuild","error_message","Array","i","length","localNine","dx","dy","tx","ty","undefined","error","push","buildFloor","workerPosition","targetPosition","moveWorker","removeWorker","positions","forEach","tile","getTile","reset","Square","props","state","squareLevel","gameState","onClick","setState","workerIndicator","indicator","is_highlighted","handleClick","React","Component","Board","squareElement","createRef","viewGameState","current","updateSelf","ref","tileState","row_index","squareJSX","renderSquare","rowSJX","generateBoardRow","generateBoard","CONTROLBUTTONS","NEWGAME","PASS","ControlPannel","styles","menuButton","Worker","owner","gender","Player","workerID","playerName","workers","moveDistance","newWorker","equals","hasWorkerWon","workerTile","getLocalNine","filter","isBuildable","validPositions","validMoves","getAllValidWorkerMoves","moveValid","foundMatch","GameController","game","player_1","player_2","placeWorker","worker_position","local_nine","buildable_positions","selectedWorkerPosition","verifyMove","clickedTile","hasWorkerAtPosition","handleSetup","handleWorkerSelection","handleWorkerMovement","find_buildable_positions","highlightTiles","local9","builtBool","clearHighlightedTiles","newTurn","Game","winningJSX","errorJSX","controller","handleBoardClick","get_current_player","role","aria-label","errorJSK","document","location","reload","updateState","current_player","turn_phase","get_turn_phase","boardElement","ControlPanel","handleControlClick","Menu","body","orange_text","purple_text","Demo","App","path","exact","component","Santi","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d1b3037.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Menu_body__1STYL\",\"purple_text\":\"Menu_purple_text__orGNo\",\"orange_text\":\"Menu_orange_text__2KcLc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuButton\":\"ControlPanel_menuButton__X8k2l\"};","module.exports = __webpack_public_path__ + \"static/media/profile.df688d03.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/santi.621a65a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/send_tx_wordless.97060425.png\";","module.exports = __webpack_public_path__ + \"static/media/seed_node_usage_wordless.3c532956.png\";","module.exports = __webpack_public_path__ + \"static/media/whats.e8bde26c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github.bafee7d2.png\";","module.exports = __webpack_public_path__ + \"static/media/link.bb5a1754.png\";","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport '../App.css';\nimport {Link} from 'react-router-dom';\n\nfunction Navbar() {\n    const navStyle = {\n        color: 'white'\n    };\n    return (\n        <div className='nav-bar'>\n            <link href='http://fonts.googleapis.com/css?family=Oleo+Script' rel='stylesheet' type='text/css'></link>\n            \n            <h1>Richard Pham</h1>\n            <u1 className='nav-links'>\n                <Link style={navStyle} to='/home'>\n                    <li>Home</li>\n                </Link>\n                <Link style={navStyle} to='/about'>\n                    <li>About</li>\n                </Link>\n                <Link style={navStyle} to='/projects'>\n                    <li>Projects</li>\n                </Link>\n\n                \n                <li><a style = {{color: 'white' }} target=\"_blank\" href=\"https://richard-personal-site.s3-us-west-1.amazonaws.com/resume.pdf\">Resume</a></li>\n\n                <Link style={navStyle} to='/contact'>\n                    <li>Contact</li>\n                </Link>\n            </u1>\n        </div>\n    );\n}\n\nexport default Navbar;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nfunction Home() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div className='home-layout'>\n                    \n                    <h2>\n                        <p>\n                           \n                        </p>\n                    </h2>\n                    <p className='home-text'>\n                        <h3>Hi, I'm Richard Pham</h3>\n                    </p>\n                    <p>I am a web developer, a programmer, a problem solver.</p>\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default Home;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport img from './profile.jpeg';\n\nfunction Profile() {\n    return (\n        <img src={img} style={{width: 200}} fluid alt='Profile' />\n    );\n}\n\nexport default Profile;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Profile from './images/Profile';\n\nfunction About() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div className='container'>\n                    <div className='profileImage'>\n                        <Profile />\n                    </div>\n                    <p className='textProfile'>\n\n                        I have graduated from the University of Calgary with a degree in Computer Science. \n                        Since then I have been learning React, JavaScript, and HTML to peruse a career in front end development. \n                        My interests have largely  been algorithms, problem solving, and front end development.\n                        My current goal is to learn more technologies and stacks to become a full stack developer. \n                        What motivates me the most is the challenge that comes from working on interesting problems. \n                        Feel free to take a look at my resume to get an in-depth look at my skills and projects and thank you for visiting my personal website.\n                    </p>\n                </div>\n\n\n\n            </header>\n        </div>\n    );\n}\n\nexport default About;","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport img from  './santi.jpg';\n\nfunction Project1Photo(){\n    return (\n        <img src={img} style={{width: 300}} fluid alt='santi screenshot' />\n    );\n}\n\nexport default Project1Photo;","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport img from './send_tx_wordless.png';\nimport img2 from './seed_node_usage_wordless.png';\n\n\nfunction Project2Photo() {\n    return (\n        <div>            \n            <img src={img} class= 'blockImage' style={{width: 300}} fluid alt='network transaction' />\n            <img src={img2} style={{width: 300}} fluid alt='seed finding' />\n        </div>\n\n    );\n}\n\nexport default Project2Photo;","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport img from './whats.jpg';\n\nfunction Project3Photo() {\n    return (\n        <img src={img} style={{width: 300}} fluid alt='whats in a password' />\n    );\n}\n\nexport default Project3Photo;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Img1 from './images/Project1Photo';\nimport Img2 from './images/Project2Photo';\nimport Img3 from './images/Project3Photo';\nimport {Link} from 'react-router-dom';\n\nfunction Projects() {\n    const navStyle = {\n        color: 'white'\n\n    };\n    return (\n        <div className=\"App\">\n\n            <header className='projects'>\n                <div className='projectInner'>\n                    <div className='projectImage'>\n                        <Img1/>\n                    </div>\n                    <p className='textProject'>\n\n                        <h2>Santorini Online</h2>\n                        A digitial version of a classic game done in with React, JavaScript, HTML, and CSS. Try out the demo here!\n\n                        <u1 className='nav-links'>\n                            <Link style={navStyle} to='/santi'>\n                                <li><h1>Demo</h1></li>\n                            </Link>     \n\n                            <h1><a href=\"https://github.com/rjmpham/HackathonReactSanti\">Github Link</a></h1>\n                        </u1>\n\n\n\n                    </p>\n\n                </div>\n                <div className='projectInner2'>\n                    <div className='projectImage2'>\n                        <Img2/>\n                    </div>\n                    <p className='textProject2'>\n                        <h2>Blockchain Clone</h2>\n                        A functional clone of blockchain, written in Java, with a secure algorithm for block generation, and a peer-2-peer network architectue.\n                        A server can be started, and peers can mine blocks, make transactions, verify them.\n                        The repo also contains multiple altered and malicious version of the code that demonstrate the blockchain's ability to resist attacks.\n\n                        <h1><a href=\"https://github.com/rjmpham/HackathonReactSanti\">Github Link</a></h1>\n\n                    </p>\n\n                </div>\n                <div className='projectInner2'>\n                    <div className='projectImage2'>\n                        <Img3/>\n                    </div>\n                    <p className='textProject2'>\n                        <h2>Password Generatior Site </h2>\n                        A live website hosted on AWS with a JavaScript algorithm that generates passwords, tests them for their security value.\n                        The website explains tips and tricks to create and remember strong passwords. \n                        The passwords generated are checked via a popular  estimator called zxcvbn.  \n\n                        <h1><a href=\"http://whatsinapassword.com\">whatsinapassword.com</a>     <a href=\"https://github.com/rjmpham/HackathonReactSanti\">Github Link</a></h1>\n\n                        \n\n                    </p>\n\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default Projects;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport img from './github.png';\n\nfunction Github() {\n    return (\n        <img src={img} style={{width: 50}}  hspace='15' vspace='10' fluid alt='Github Logo' />\n    );\n}\n\nexport default Github;","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport img from './link.png';\n\nfunction Link(){\n    return (\n        <img src={img} style={{width: 50}}  hspace='15' vspace='10'  fluid alt='Linkedin Logo' />\n    );\n}\n\nexport default Link;","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport GithubLogo from './images/Github';\n// eslint-disable-next-line no-unused-vars\nimport LinkLogo from './images/Link';\n\nfunction Contact() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div className='home-layout'>\n                    <h1 style={{fontSize:'300%'}}>Contact</h1>\n                    \n                    <p>\n                        <h1>rjmpham@gmail.com</h1>\n                    </p>\n\n                    <p>\n\n                        <h1>(587) 433-3138</h1>\n                    </p>\n\n                    <p>\n                        <a href=\"https://github.com/rjmpham/\"><GithubLogo/></a>  <a href=\"https://www.linkedin.com/in/rjmpham/\"><LinkLogo/></a>\n                    </p>\n\n                </div>\n\n\n\n                \n            </header>\n        </div>\n    );\n}\n\nexport default Contact;","export default class Vector2{\n    constructor(x, y){\n        this.x = x;\n        this.y = y;\n    }\n\n    equals(vector2){\n        return (vector2.x === this.x) && (vector2.y === this.y);\n    }\n\n    toString(){\n        return '(' + this.x + ', ' + this.y + ')';\n    }\n}","export const FLOOR = {\n    GROUND: 0, \n    L_ONE: 1,\n    L_TWO: 2,\n    L_THREE: 3,\n    DOME: 'D',\n};","import {FLOOR} from './Floor.js';\nimport Vector2 from './Vector2.js';\n\nexport default class Tile {\n    description = 'This is a tile!';\n    topLevel = FLOOR.GROUND;\n    capped = false;\n    worker = null;\n    position;\n    isHighlighted = false;\n\n    constructor(x,y){\n        this.position = new Vector2(x,y);\n        this.description += this.position.toString();\n    }\n\n    moveWorker(worker){\n        this.worker = worker;\n        console.log('Worker is now ' + this.worker);\n    }\n\n    removeWorker(){\n        this.worker = null;\n    }\n\n    //currently also the isMoveable\n    isBuildable(){\n        return (!this.capped) && (this.worker === null);\n    }\n\n    //assumes that the build has been validated\n    buildFloor(){\n        if((this.topLevel+1)===4){\n            this.topLevel = FLOOR.DOME;\n            this.capped = true;\n        } else {\n            this.topLevel+=1;\n        }\n    }\n\n    hasWorkerWon(){\n        return this.worker === null && this.topLevel === FLOOR.L_THREE;\n    }\n\n    getIndicator(){\n        return this.worker.getIndicator();\n    }\n\n    reset(){\n        this.topLevel = FLOOR.GROUND;\n        this.capped = false;\n        this.worker = null;\n        this.isHighlighted = false;\n    }\n\n\n\n    //uncaping requires memory of previos top floor\n\n    //overide floor can accept something and set topLevel for future changes.\n\n\n}","/* eslint-disable no-unused-vars */\nimport Tile from './Tile.js';\n\nexport default class GameState{\n    boardState = null;\n    playerList = []\n    activePlayer = null;\n    boardSize = 0;\n    winner = null;\n    selectedWorker = null;\n    highlightedTiles = [];\n\n    isInSetup = true;\n    needsToSelectWorker = false;\n    workerNeedsToMove = false;\n    needsToBuild = false;\n\n    error_message = null;\n    \n    constructor(boardSize){\n        this.boardState = new Array(boardSize);\n        for (var i = 0; i < this.boardState.length; i++) {\n            this.boardState[i] = new Array(boardSize);\n        }\n        \n        for (let x = 0; x < this.boardState[0].length; x++){\n            for (let y = 0; y < this.boardState[x].length; y++){\n                this.boardState[x][y] = new Tile(x, y); // 0 means nothing has been built\n            }\n        }\n        \n        this.boardSize = boardSize;\n    }\n    \n    //Get the 3x3 grid around a target position. \n    //Returns up to 9 Tiles, depending if the position is on the edge of the board or not.\n    getLocalNine(position){\n        let localNine = [];\n        for (let dx = -1; dx <= 1; dx++){\n            for (let dy = -1; dy <= 1; dy++){\n                let tx = position.x + dx ;\n                let ty = position.y + dy;\n                if (tx >= 0 && tx < this.boardSize){\n                    if (ty >= 0 && ty < this.boardSize){\n                        if (!this.boardState[tx][ty] === undefined){\n                            console.error('Attempted to push undefined to local 9.');\n                        }\n                        else {\n                            localNine.push(this.boardState[tx][ty]);\n                        }\n                    }\n                }\n            }\n        }\n        return localNine;\n    }\n\n    getTile(vector2){\n        return this.boardState[vector2.x][vector2.y];\n    }\n\n    buildFloor(position){\n        this.boardState[position.x][position.y].buildFloor();\n    }\n    \n    //update the boardState\n    moveWorker(workerPosition, targetPosition){\n        if(this.selectedWorker === null) console.error('There is no worker selected.');\n        this.boardState[targetPosition.x][targetPosition.y].moveWorker(this.selectedWorker);\n        this.boardState[workerPosition.x][workerPosition.y].removeWorker();\n    }\n\n    playerHasWon(){\n        return this.winner === null;\n    }\n\n    highlightTiles(positions){\n        if(this.selectedWorker === null)\n            console.error('Selected worker is null');\n\n        if (positions.length !== 0) {\n            positions.forEach(tile => {\n                this.getTile(tile.position).isHighlighted = true;\n                this.highlightedTiles.push(tile);\n            });\n        }\n    }\n\n    clearHighlightedTiles(){\n        // Clear the state of each tile\n        this.highlightedTiles.forEach(tile => {\n            this.getTile(tile.position).isHighlighted = false;\n        });\n\n        // Clear highlited tiles list\n        this.highlightedTiles = [];\n    }\n\n    setTile(position, tile){\n        this.boardState[position.x][position.y] = tile;\n    }\n\n    reset(){        \n        for(let x = 0; x < this.boardState[0].length; x++){\n            for(let y = 0; y < this.boardState[x].length; y++){\n                this.boardState[x][y].reset();\n            }\n        }\n        \n        this.playerList.forEach(x => x.reset()); \n        this.winner = null;       \n    }\n\n    logGameState(){\n        console.log('Current state: ');\n        for(let x = 0; x < this.boardSize; x++){\n            for(let y = 0; y < this.boardSize; y++){\n                console.log(this.boardState[x][y].position + ' has worker: ' + this.boardState[x][y].worker);\n            }\n        }\n    }\n    \n   \n}","import React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport GameState from '../Model/GameState.js';\nimport {FLOOR} from '../Model/Floor.js';\n\n\nexport default class Square extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = ({\n            squareLevel: 'square0', \n            gameState: this.props.gameState,\n        });\n    }\n\n    handleClick(){\n        this.props.onClick(this.props.position); \n        let tile = this.state.gameState.boardState[this.props.position.x][this.props.position.y];\n        \n        if(tile.topLevel===FLOOR.GROUND){\n            this.setState({\n                squareLevel: 'square0', \n            });\n        } else if(tile.topLevel===FLOOR.L_ONE){\n            this.setState({\n                squareLevel: 'square1', \n            });\n        } else if(tile.topLevel===FLOOR.L_TWO){\n            this.setState({\n                squareLevel: 'square2', \n            });\n        } else if(tile.topLevel===FLOOR.L_THREE){\n            this.setState({\n                squareLevel: 'square3', \n            });\n        } else {\n            this.setState({\n                squareLevel: 'square4', \n            });\n        }\n    }\n \n    \n    render(){\n        let tile = this.state.gameState.boardState[this.props.position.x][this.props.position.y];\n        // eslint-disable-next-line\n        let workerIndicator = (tile.worker === null) ? '' : (tile.worker.indicator==1)? '🐺':'🐻';\n        if (tile.is_highlighted) {\n            this.setState({\n                squareLevel: 'highlightedsquare',\n            });\n        }\n\n        return (\n            <button \n                // eslint-disable-next-line quotes\n                className={this.state.squareLevel}\n                onClick={() => this.handleClick()}\n            >\n                <div className= \"playerRow\">\n                    {workerIndicator}\n                </div>\n            </button>\n        );\n    }\n}","import React from 'react';\nimport Vector2 from '../Model/Vector2.js';\n// eslint-disable-next-line no-unused-vars\nimport Square from './Square.js';\n\nconst BOARD_SIZE = 5;\n\nexport default class Board extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.squareElement = React.createRef();\n\n        this.state=({\n            viewGameState: this.props.gameState\n        });\n    }\n\n    updateSquare(){\n        this.squareElement.current.updateSelf();\n    }\n\n    // takes a vector and assigns that vector to a square, also assigns an onclick method\n    renderSquare(i) {\n        return (\n            <Square\n                ref = {this.squareElement}\n                position = {i}\n                tileState={this.state.viewGameState.boardState[i.x][i.y]}\n                onClick={(i) => this.props.onClick(i)}\n                gameState={this.state.viewGameState}\n            />\n        );\n    }\n\n    generateBoardRow(row_index){\n        let squareJSX = [];\n        for(let y = 0; y < BOARD_SIZE; y++){\n            squareJSX.push(this.renderSquare(new Vector2(row_index,y)));\n        }\n        return squareJSX;\n    }\n\n    generateBoard(){\n        let rowSJX = [];\n  \n        for(let i = 0; i < BOARD_SIZE; i++){\n            rowSJX.push(\n                <div className='board-row'>\n                    {this.generateBoardRow(i)}\n                </div>\n            );\n        }\n\n        return rowSJX;\n    }\n\n    render() {\n        return (\n            <div>\n                { this.generateBoard() }\n            </div>\n        );\n    }\n}","export const CONTROLBUTTONS = {\n    NEWGAME: 0, \n    PASS: 1,\n};","import React from 'react';\nimport {CONTROLBUTTONS} from '../Model/ControlButtons.js'; \nimport styles from \"../styles/ControlPanel.module.css\";\n\nfunction ControlPannel(props){\n\n    function handleClick(i){\n        props.onClick(i);\n    }\n\n    return(\n        <div>\n            <button \n                className={styles.menuButton} \n                onClick={() => handleClick(CONTROLBUTTONS.PASS)}\n            > \n                Pass\n            </button>\n            \n            <button \n                className={styles.menuButton}\n                onClick={() => handleClick(CONTROLBUTTONS.NEWGAME)}\n            > \n                New Game\n            </button>\n        </div>\n    );\n    \n} export default ControlPannel;\n","export default class Worker{\n    gender = 0;\n    position = null;\n    owner = null;\n    indicator = 'W';\n\n    constructor(position, owner, indicator){\n        this.position = position;\n        this.owner = owner;\n        this.indicator = indicator;\n    }\n\n    logSomething(){\n        console.log('I LOGGED SOMETHING');\n    }\n\n\n}\n\n","import Worker from '../Model/Worker.js';\n\nexport default class Player{\n    workers = [];\n    moveDistance = 1;\n    workerID = '';\n\n\n    constructor(gameState, workerID,playerName){\n        this.gameState = gameState;\n        this.workerID = workerID;\n        this.playerName = playerName;\n    }\n\n    //creates a new worker at the target position, but does not update the gameState.\n    placeWorker(position){\n        let newWorker = new Worker(position, this, this.workerID);\n        this.workers.push(newWorker);\n        console.log('Placed worker at ' + position);\n        \n        return newWorker;\n    }\n\n    //updates the workers position, but not the gameState (UNLESS THE PLAYER WON.)\n    moveWorker(workerPosition, targetPosition){\n        for(let i =0; i < this.workers.length; i++){\n            let worker  = this.workers[i];\n            if(worker.position.equals(workerPosition)){\n                worker.position = targetPosition;\n            }\n        }\n        if(this.gameState.getTile(workerPosition).hasWorkerWon())\n            this.gameState.winner = this;\n    }\n\n   \n\n    //gets all valid moves as an array of Vector2s, of the valid moves for a given worker.\n    getAllValidWorkerMoves(position){\n        let workerTile = this.gameState.getTile(position);\n        let localNine = this.gameState.getLocalNine(position);\n        \n        localNine = localNine.filter((tile) => {return tile.isBuildable();}); //filter out all capped and worker filled tiles\n        localNine = localNine.filter((tile) => {return tile.topLevel <= workerTile.topLevel+1;}); //filter out all tiles that are too high\n        \n        let validPositions = [];\n        for(let i =0; i < localNine.length; i++){\n            validPositions.push(localNine[i].position);\n        }\n        return validPositions;\n    }\n\n    //verifies that a given position is a valid move location for a given worker\n    verifyMove(workerPosition, targetPosition){\n        let validMoves = this.getAllValidWorkerMoves(workerPosition);\n        validMoves.forEach(x => console.log(x));\n        let moveValid = false;\n        for(let i = 0; i < validMoves.length; i++){\n            if(validMoves[i].equals(targetPosition)){\n                console.log('The move is valid.');\n                moveValid = true;\n            }\n                \n        }\n        return moveValid;\n    }\n\n\n    hasWorkerAtPosition(position){\n        let foundMatch = false;\n        this.workers.forEach(x => {\n            if(x.position.equals(position)){\n                foundMatch = true;\n            }\n        });\n        return foundMatch;\n    }\n\n    reset(){\n        this.workers = [];\n    }\n}\n\n","import Player from './Player';\nimport GameState from '../Model/GameState';\nimport {FLOOR} from '../Model/Floor.js';\n\nexport default class GameController {\n    constructor(game){\n        this.gameState = new GameState(5);\n        this.player_1 = new Player(this.gameState, '1');\n        this.player_2 = new Player(this.gameState, '2');\n        this.gameState.activePlayer = this.player_1;\n        this.game = game;\n    }\n\n    placeWorker(position) {\n        this.gameState.activePlayer.placeWorker(position);\n    }\n\n    moveWorker(workerPosition, targetPosition){\n        this.gameState.moveWorker(workerPosition, targetPosition);  //update the board state\n        this.gameState.activePlayer.moveWorker(workerPosition, targetPosition); //update the worker state\n    }\n\n    buildFloor(targetPosition){\n        this.gameState.buildFloor(targetPosition); //update the board state\n    }\n\n    newGame(){\n        this.gameState.isInSetup = true;\n        this.gameState.needsToSelectWorker = false;\n        this.gameState.workerNeedsToMove = false;\n        this.gameState.needsToBuild = false;\n        this.gameState.reset();\n        this.player_1 = new Player(this.gameState, '1');\n        this.player_2 = new Player(this.gameState, '2');\n        this.gameState.activePlayer = this.player_1;\n        console.log('Created a new game.');\n    }\n\n    // Resets the game State\n    newTurn() {\n        this.gameState.needsToBuild = false;\n        this.gameState.workerNeedsToMove = false;\n        this.gameState.needsToSelectWorker = true;\n\n        this.gameState.activePlayer = (this.gameState.activePlayer === this.player_1) ? this.player_2 : this.player_1;\n    }\n\n    find_buildable_positions(worker_position) {\n        let local_nine = this.gameState.getLocalNine(worker_position);\n        let buildable_positions = [];\n        local_nine.forEach(tile => {\n            if (tile.isBuildable() && tile.position !== worker_position) {\n                buildable_positions.push(tile);\n            }\n        });\n\n        return buildable_positions;\n    }\n\n    //assumes a worker is selected \n    handleWorkerMovement(position){\n        let selectedWorkerPosition = this.gameState.selectedWorker.position;\n        \n        if(this.gameState.activePlayer.verifyMove(selectedWorkerPosition, position)){\n            console.log('Moving worker to ' + position.toString());\n            this.moveWorker(selectedWorkerPosition, position);\n            if(this.gameState.getTile(position).topLevel === FLOOR.L_THREE){\n                this.gameState.winner = true;\n                return false;\n            }\n\n            this.gameState.needsToBuild = true;\n            this.gameState.needsToSelectWorker = false;\n\n            return false;\n        }\n\n        this.gameState.error_message = \"Can't move worker to that location.\";\n        return true;\n    }\n\n    handleWorkerSelection(position){\n        let clickedTile = this.gameState.getTile(position);\n        \n        //there is no worker on the clicked tile\n        if(clickedTile.worker === null){\n            this.gameState.error_message = 'Selected a tile without a worker';\n            return true;\n        }\n\n        //they have selected a worker. But is it theirs?\n        let selectedWorker = clickedTile.worker;\n\n        if(this.gameState.activePlayer.hasWorkerAtPosition(position)){\n            console.log('The user has selected their worker');\n            this.gameState.selectedWorker = selectedWorker;\n            if(!this.gameState.workerNeedsToMove){\n                this.gameState.workerNeedsToMove = true;\n            }\n            return false;\n        } else {\n            this.gameState.error_message = 'Select your worker';\n        }\n        return true;\n    }\n\n    handleBoardClick(position) {\n        if(this.gameState.winner === true) {\n            return;\n        }\n\n        if(this.gameState.isInSetup){\n            this.gameState.isInSetup = this.handleSetup(position);\n            return;\n        }\n\n        if(this.gameState.needsToSelectWorker){\n            this.gameState.needsToSelectWorker = this.handleWorkerSelection(position);\n            return;\n        }\n\n        if(this.gameState.workerNeedsToMove){\n            if (this.gameState.getTile(position).isBuildable()) {\n                this.gameState.workerNeedsToMove = this.handleWorkerMovement(position);\n\n                let buildable_positions = this.find_buildable_positions(position);\n                this.gameState.highlightTiles(buildable_positions);\n                \n\n                return;   \n            } else {\n                if (this.handleWorkerSelection(position)) {\n                    this.gameState.error_message = 'Worker can\\'t move to that location';\n                    return;\n                } else {\n                    return;\n                }\n\n            }\n        }\n\n        if (this.gameState.needsToBuild) {\n            console.log('Attempting to build at position ' + position);\n            let target = this.gameState.getTile(position);\n\n            if (target.isBuildable()) {\n                let selectedWorkerPosition = this.gameState.selectedWorker.position;\n\n                let local9 = this.gameState.getLocalNine(selectedWorkerPosition);\n                let builtBool = false;\n\n                for(let i = 0; i < local9.length; i++){\n                    if(local9[i]===target){\n                        this.gameState.buildFloor(position);\n                        builtBool = true;\n                        break;\n                    }\n                }\n                \n                if (builtBool) {\n                    this.gameState.clearHighlightedTiles();\n                    this.newTurn();\n                } else {\n                    this.gameState.error_message = 'Build Position is unreachable';\n                }\n\n            } else {\n                this.gameState.error_message = \"Can't build on tiles that are already occupied\";\n            }\n        }\n       \n    }\n\n\n    handleSetup(position){\n        let clickedTile = this.gameState.getTile(position);\n\n        //Can't place a worker on top of another.\n        if(clickedTile.worker !== null){\n            this.gameState.error_message = 'Cannot place worker, tile is occupied.';\n            return true;\n        }\n         \n        //player 1 places their worker.\n        if(this.player_1.workers.length < 2){\n            clickedTile.worker = (this.player_1.placeWorker(position));\n            if (this.player_1.workers.length === 2) {\n                this.gameState.activePlayer = this.player_2;\n            }\n            return true;\n        }\n\n        //player 2 places their worker\n        if(this.player_2.workers.length < 2){\n            clickedTile.moveWorker(this.player_2.placeWorker(position));\n\n            if(this.player_2.workers.length === 2){\n                this.gameState.needsToSelectWorker = true;\n                this.gameState.activePlayer=this.player_1;\n                return false;\n            }\n                \n            return true;\n        }\n    }\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Board from './Board.js';\nimport ControlPanel from './ControlPanel.js';\nimport {CONTROLBUTTONS} from '../Model/ControlButtons.js'; \nimport GameController from '../Controllers/GameController';\n\n\nexport default class Game extends React.Component {\n    winningJSX = null;\n    errorJSX = null;\n    constructor(props) {\n        super(props);\n        this.controller = new GameController(this);\n\n        this.state=({\n            viewGameState: this.controller.gameState\n        });\n    }\n\n    handleBoardClick(i){\n        this.controller.handleBoardClick(i);\n        this.setState({\n            viewGameState: this.controller.gameState\n        });\n        if(this.state.viewGameState.winner){\n            this.winningJSX = <div className= \"winner\">Player {this.get_current_player()} wins!!! <span role='img' aria-label='medal'>🎖️</span></div>;\n        } else {\n            this.winningJSX = null;\n        }\n\n        if (this.state.viewGameState.error_message != null) {\n            this.errorJSK = <p><b style={{color: '#b33939'}}><span role='img' aria-label='warning'>⚠️</span></b> {this.state.viewGameState.error_message}</p>;\n            this.controller.gameState.error_message = null;\n        } else {\n            this.errorJSK = null;\n        }\n\n    }\n\n    get_current_player() {\n        return this.state.viewGameState.activePlayer.workerID;\n    }\n\n    get_turn_phase() {\n        if (this.state.viewGameState.isInSetup) {\n            return 'Setup ⚙️';\n        } else if (this.state.viewGameState.needsToSelectWorker || this.state.viewGameState.workerNeedsToMove) {\n            return 'Worker Movement 🧳';\n        } else if (this.state.viewGameState.needsToBuild) {\n            return 'Building 🔨';\n        }\n    }\n\n    handleControlClick(i){\n        if (i === CONTROLBUTTONS.NEWGAME){\n            //we're just refreshing the page for new game atm\n            document.location.reload(true);\n        }\n        \n        else if (i === CONTROLBUTTONS.PASS) {\n            this.controller.newTurn();\n            this.updateState();\n        }\n    }\n\n    updateState(){\n        this.setState({viewGameState: this.controller.gameState});\n    }\n\n    render() {    \n        let current_player = this.get_current_player();\n        let turn_phase = this.get_turn_phase();\n        return (\n            <>\n                <h1>Santorini in React <span role=\"img\" aria-label=\"wave\">🌊</span></h1>\n                <h4>Created by Erik Biederstadt, Richard Pham, and David </h4>\n                <div className=\"game\">\n                    <div className=\"game-board\">\n                        <Board \n                            ref ={this.boardElement} \n                            onClick={(i) => this.handleBoardClick(i)}\n                            gameState={this.state.viewGameState}\n                        />\n                    </div>\n\n                    <div className=\"winner-panel\">\n                        <div className=\"control-panel\">\n                            <ControlPanel                    \n                                onClick={(i) => this.handleControlClick(i)}\n                                gameState={this.state.viewGameState}\n                            />\n                        </div>\n                        <p>It is <b>Player {current_player}'s turn</b></p>\n                        <p><b>Turn Phase:</b> {turn_phase}</p>\n                        {this.errorJSK}\n                        {this.winningJSX}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport styles from '../styles/Menu.module.css';\n\nexport default function Menu() {\n    return (\n        <div className={styles.body}>\n            <h2>Setup</h2>\n            <p>The youngest player is the <b className={styles.orange_text}>Start Player</b>, who begins by placing 2  <b className={styles.orange_text}><span role=\"img\" aria-label=\"Wol\">🐺</span></b> tokens into any <b className={styles.orange_text}>Unoccupied Spaces</b> on the board. The other players then place their 2 <b className={styles.orange_text}><span role=\"img\" aria-label=\"Panda\">🐻</span></b> tokens. </p>\n            \n            <h2>How to Play</h2>\n\n            <p>Player take turns, starting with the <b className={styles.orange_text}>Start Player</b>, who first placed <b className={styles.orange_text}><span role=\"img\" aria-label=\"Wol\">🐺</span></b>. On your turn, select one of you <b className={styles.orange_text}><span role=\"img\" aria-label=\"Wol\">🐺</span> </b> or <b className={styles.orange_text}><span role=\"img\" aria-label=\"Panda\">🐻</span></b> tokens. You can then <b className={styles.purple_text}>move</b> and then <b className={styles.purple_text}>build</b> with the <b className={styles.orange_text}>selected <span role=\"img\" aria-label=\"Wol\">🐺</span> or <span role=\"img\" aria-label=\"Panda\">🐻</span></b>. You may also <b className={styles.purple_text}>Pass</b> your turn.</p>\n  \n            <p>A <b className={styles.purple_text}>Move</b> action allows your <b className={styles.orange_text}>selected <span role=\"img\" aria-label=\"Wol\">🐺</span> or <span role=\"img\" aria-label=\"Panda\">🐻</span></b> to go into one of the (up to) eight neighbouring spaces.</p>\n            <p>A <b className={styles.purple_text}>Build</b> action on a square will start a castle, that square will become one level higher per castle part. You can select one of the (up to) eight neighbouring spaces to <b className={styles.purple_text}>Build</b> on. The max level has three towers, and cannot be <b className={styles.purple_text}>Built</b> on, or <b className={styles.purple_text}>Moved</b> onto. </p>\n            <p>You can <b className={styles.purple_text}>build</b> onto a square with any level</p>\n            <p>A <b className={styles.orange_text}>selected <span role=\"img\" aria-label=\"Wol\">🐺</span> or <span role=\"img\" aria-label=\"Panda\">🐻</span></b> may <b className={styles.purple_text}>move up</b> a maximum of one Level higher, <b className={styles.purple_text}>move down</b> any number of Levels lower, or <b className={styles.purple_text}>move</b> along the same Level.</p>\n\n            <p>The space your <b className={styles.orange_text}>selected <span role=\"img\" aria-label=\"Wol\">🐺</span> or <span role=\"img\" aria-label=\"Panda\">🐻</span></b> <b className={styles.purple_text}>moves</b> into must be <b className={styles.orange_text}>unoccopied</b> (not containing a <b className={styles.orange_text}>selected <span role=\"img\" aria-label=\"Wol\">🐺</span> or <span role=\"img\" aria-label=\"Panda\">🐻</span></b> or a <b className={styles.orange_text}>Tower</b>).</p>\n\n            <h2>Winning the Game</h2>\n            <p>If one of your <b className={styles.orange_text}>selected <span role=\"img\" aria-label=\"Wol\">🐺</span> or <span role=\"img\" aria-label=\"Panda\">🐻</span></b> <b className={styles.purple_text}>moves up</b> on top of <b className={styles.orange_text}>Level 3</b> durning your turn, you insantly win!</p>\n        </div>\n    );\n}","/* eslint-disable no-unused-vars */\n\nimport React from 'react';\nimport './Demo.css';\nimport Game from './View/Game.js';\nimport Menu from './View/Menu';\n\nfunction Demo(){\n    return(\n        <div className='demo-area'>\n            <div className=\"gameArea\">\n                <div className=\"innerGame\">\n                    <Game />\n                    <Menu />\n                </div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Demo;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport './App.css';\nimport NavBar from './components/Navbar';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\nimport Santi from './components/demo/Demo';\n//import Santi from './components/demo/Santi'\n\nimport {BrowserRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom';\n\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n\n                <NavBar/>\n                <Switch>\n                    <Route path='/' exact component ={Home}/>\n                    <Route path='/home' exact component ={Home}/>\n                    <Route path='/about' exact component ={About}/>\n                    <Route path='/projects' exact component ={Projects}/>\n                    <Route path='/contact' exact component ={Contact}/>\n                    <Route path='/santi' exact component ={Santi}/>\n\n                </Switch>\n            </div>      \n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}